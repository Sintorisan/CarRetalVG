@page "/"
@inject InputValues iv
@inject Messages m
@inject BusinessLogic bl

<PageTitle>Cars</PageTitle>

<h1 class="display-6">Vehicles</h1>

<!-- Radio buttons for filtering -->
<div class="d-flex justify-content-center m-5">
    <div class="btn-group" role="group" aria-label="Basic radio toggle button group">
        
        <input type="radio" class="btn-check" @onchange="@(() => iv.Display = null)" name="btnradio" id="btnradio3" autocomplete="off" checked>
        <label class="btn btn-outline-primary" for="btnradio3">All Vehicles</label>

        <input type="radio" class="btn-check" @onchange="@(() => iv.Display = VehicleAvailability.Available)" name="btnradio" id="btnradio1" autocomplete="off">
        <label class="btn btn-outline-primary" for="btnradio1">Available Vehicles</label>

        <input type="radio" class="btn-check" @onchange="@(() => iv.Display = VehicleAvailability.Booked)" name="btnradio" id="btnradio2" autocomplete="off">
        <label class="btn btn-outline-primary" for="btnradio2">Booked Vehicles</label>

        <div class="btn-group" role="group">
            <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
                Add Vehicle
            </button>
        </div>
    </div>
</div>

<!-- Collapsible form for adding vehicles -->
<div class="collapse text-center" id="collapseExample">
    <div class="card card-body">
        <div class="row justify-content-center align-items-center">
            <div class="col-sm form-floating mb-3">
                <input class="form-control" id="makerInput" type="text" placeholder="Maker" @bind="iv.Make" />
                <label for="makerInput">Maker</label>
            </div>
            <div class="col-sm form-floating mb-3">
                <input class="form-control" id="regNoInput" type="text" placeholder="RegNo" @bind="iv.RegNo" />
                <label for="regNoInput">Registration Number</label>
            </div>
            <div class="col-sm form-floating mb-3">
                <input class="form-control" id="yearInput" type="text" placeholder="Year" @bind="iv.Year" />
                <label for="yearInput">Year</label>
            </div>
            <div class="col-sm form-floating mb-3">
                <input class="form-control" id="odometerInput" type="text" placeholder="Odometer" @bind="iv.Odometer" />
                <label for="odometerInput">Km Driven</label>
            </div>
            <div class="col-sm form-floating mb-3">
                <select class="form-select" id="typeSelect" @bind="iv.Type">
                    @foreach (var vehicleType in bl.GetVehicleTypes())
                    {
                        <option>@vehicleType</option>
                    }
                </select>
                <label for="typeSelect">Vehicle Type</label>
            </div>
            <div class="col-sm form-floating mb-3">
                <select class="form-select" id="engineSelect" @bind="iv.Engine">
                    @foreach (var vehicleEngine in bl.GetVehicleEngine())
                    {
                        <option>@vehicleEngine</option>
                    }
                </select>
                <label for="engineSelect">Vehicle Engine</label>
            </div>
            <div class="col-sm mb-3 d-grid">
                <button class="btn btn-primary" type="submit" @onclick="bl.AddVehicleAsync" disabled="@m.InProgressBool">Add</button>
            </div>
        </div>
    </div>
</div>

<!-- Display message -->
@if (m.InProgressBool)
{
    <div class="alert alert-light alert-dismissible fade show text-center" role="alert">
        <div class="d-flex text-warning justify-content-center">
            <div class="spinner-border" style="width: 3rem; height: 3rem;" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    </div>

}
@if (m.ErrorBool)
{
    <div class="alert alert-danger alert-dismissible fade show text-center" role="alert">
        <h4>@m.Message</h4>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" @onclick="m.ResetMessage"></button>
    </div>
}
else if (m.AddingComplete)
{
    <div class="alert alert-success alert-dismissible fade show text-center" role="alert">
        <h4>@m.Message</h4>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" @onclick="m.ResetMessage"></button>
    </div>
}
else if (m.BookingComplete)
{
    <div class="alert alert-success alert-dismissible fade show text-center" role="alert">
        <h4>@m.Message</h4>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" @onclick="m.ResetMessage"></button>
    </div>
}

<!-- Display vehicle cards -->
<div class="row row-cols-1 row-cols-md-3 g-4 m-3">
    @foreach (var v in bl.GetRentables(iv.Display))
    {
        <div class="col">
            <div class="card text-bg-secondary" style="width: 18rem;">
                <img src="@v.Picture" class="card-img-top img-thumbnail m-1" style="height:256px; width:auto;" alt="...">
                <div class="card-body">
                    <h5 class="card-title">@v.RegistrationNumber</h5>
                    <p class="card-text">@v.Description</p>
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item text-bg-secondary">ID: @v.Id</li>
                    <li class="list-group-item text-bg-secondary">Cost per day: @v.CostDay $</li>
                    <li class="list-group-item text-bg-secondary">Cost per km: @v.CostKm $</li>
                </ul>
                <div class="btn-group" role="group" aria-label="Basic example">
                    <button type="button" style="color: white;" data-bs-toggle="modal" data-bs-target="#exampleModal"
                            class="btn btn-@(v.Availability.Equals(VehicleAvailability.Available) ? "success" : "danger")"
                            disabled="@(v.Availability.Equals(VehicleAvailability.Booked) || m.InProgressBool)"
                    @onclick="@(() => iv.AssignValue(v))">
                        @(v.Availability.Equals(VehicleAvailability.Available) ? "Book Vehicle" : "Booked")
                    </button>
                </div>
            </div>
        </div>
    }
</div>

<!-- Modal for booking a vehicle -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Book a vehicle</h1>
            </div>
            <div class="modal-body">
                @if (iv.SelectedRentable != null)
                {
                    <div class="row">
                        <div class="col">
                            <h6>Vehicle info:</h6>
                            <div>
                                <p><strong>Reg Number:</strong> @iv.SelectedRentable.RegistrationNumber</p>
                                <p><strong>Maker:</strong> @iv.SelectedRentable.Make</p>
                                <p><strong>Year:</strong> @iv.SelectedRentable.Year.ToString()</p>
                                <p><strong>Driven:</strong> @iv.SelectedRentable.Odometer.ToString() km</p>
                            </div>
                        </div>
                        <div class="col">
                            <h6>Customer</h6>
                            <select class="form-select-sm" @onchange="AssignSelectedCustomer">
                                <option disabled selected value="">Customers</option>
                                @foreach (var customer in bl.GetCustomers(false))
                                {
                                    <option value="@customer.Id">@customer.FullName</option>
                                }
                            </select>
                        </div>
                    </div>
                }
            </div>
                
            <div class="modal-footer justify-content-center">
                <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary btn-sm" data-bs-dismiss="modal" @onclick="bl.AddBookingAsync">Book</button>
            </div>
        </div>
    </div>
</div>


@code{
    void AssignSelectedCustomer(ChangeEventArgs e)
    {
        if (e.Value is null) throw new ArgumentNullException("Value is null");

        if (int.TryParse(e.Value.ToString(), out int customerId)) 
        {
            var customer = bl.GetSingleCustomer(customerId);
            iv.AssignValue(customer);
        }
        else
        {
            throw new ArgumentException("Invalid customer ID format");
        }
        // Wouldn't allow me to cast this way =>  var customer = bl.GetSingleCustomer((int)e.Value);
        // AssignValue(customer);       
    }
}


